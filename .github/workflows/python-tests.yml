name: Python files testing

on:
  push:
    branches: [ "trunk" ]
  pull_request:
    branches: [ "trunk" ]

permissions:
  contents: read

jobs:
  BuildDocker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build Docker container
      run: |
        cd scripts/
        ./d -bu

  CodeLinting:
    needs: BuildDocker
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        docker exec backend-api flake8 . \
          --count \
          --select=E9,F63,F7,F82 \
          --show-source \
          --statistics
        # Check all the lines to be less than 120 chars wide
        docker exec -it backend-api flake8 . \
          --count \
          --max-complexity=10 \
          --max-line-length=120 \
          --statistics \
          --exclude alembic
    - name: Lint with pylint
      run: |
        docker exec -it backend-api pylint /app \
          --max-line-length=120 \
          --disable="C0103,C0114,C0115" \
          --fail-under 7.0 \
          --ignore alembic --ignore tests

  CodeTesting:
    needs: BuildDocker
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - name: Test with pytest
        run: |
          docker exec -it backend-api pytest -vv

  StopDocker:
    needs: [CodeLinting, CodeTesting]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Stop Docker container
      run: |
        ls
        cd ./scripts
        ./d -s
